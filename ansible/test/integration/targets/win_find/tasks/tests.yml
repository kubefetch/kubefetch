---
- name: expect failure when not setting paths
  win_find:
    patterns: a
  register: actual
  failed_when: "actual.msg != 'Get-AnsibleParam: Missing required argument: paths'"

- name: expect failure when setting paths to a file
  win_find:
    paths: "{{win_output_dir}}\\win_find\\single\\large.ps1"
  register: actual
  failed_when: actual.msg != 'Argument path ' + win_output_dir + '\\win_find\\single\\large.ps1 is a file not a directory'

- name: expect failure when path is set to a non existent folder
  win_find:
    paths: "{{win_output_dir}}\\win_find\\thisisafakefolder"
  register: actual
  failed_when: actual.msg != 'Argument path ' + win_output_dir + '\\win_find\\thisisafakefolder does not exist cannot get information on'

- name: get files in single directory
  win_find:
    paths: "{{win_output_dir}}\\win_find\\single"
  register: actual

- name: set expected value for files in a single directory
  set_fact:
    expected:
      changed: False
      examined: 5
      failed: False
      files:
      - { isarchive: True,
          attributes: Archive,
          checksum: f8d100cdcf0e6c1007db2f8dd0b7ee2884df89af,
          creationtime: 1477984205,
          extension: .ps1,
          filename: large.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\large.ps1",
          isreadonly: False,
          isshared: False,
          size: 260002 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .log,
          filename: out_20161101-091005.log,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\out_20161101-091005.log",
          isreadonly: False,
          isshared: False,
          size: 14 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 86f7e437faa5a7fce15d1ddcb9eaeaea377667b8,
          creationtime: 1477984205,
          extension: .ps1,
          filename: small.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\small.ps1",
          isreadonly: False,
          isshared: False,
          size: 1 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: test.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\test.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      matched: 4

- name: assert actual == expected
  assert:
    that: actual == expected

- name: find hidden files
  win_find:
    paths: ['{{win_find_dir}}\\single', '{{win_find_dir}}\\nested']
    hidden: True
  register: actual

- name: set fact for hidden files
  set_fact:
    expected:
      changed: False
      examined: 11
      failed: False
      files:
      - { isarchive: True,
          attributes: "Hidden, Archive",
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: hidden.ps1,
          ishidden: True,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\hidden.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      matched: 1

- name: assert actual == expected
  assert:
    that: actual == expected

- name: find file based on pattern
  win_find:
    paths: '{{win_find_dir}}\\single'
    patterns: ['*.log', 'out_*']
  register: actual_pattern

- name: find file based on pattern regex
  win_find:
    paths: '{{win_find_dir}}\\single'
    patterns: "out_\\d{8}-\\d{6}.log"
    use_regex: True
  register: actual_regex

- name: set fact for pattern files
  set_fact:
    expected:
      changed: False
      examined: 5
      failed: False
      files:
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .log,
          filename: out_20161101-091005.log,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\out_20161101-091005.log",
          isreadonly: False,
          isshared: False,
          size: 14 }
      matched: 1

- name: assert actual == expected
  assert:
    that: 
    - actual_pattern == expected
    - actual_regex == expected

- name: find files with recurse set
  win_find:
    paths: "{{win_find_dir}}\\nested"
    recurse: True
    patterns: "*.ps1"
  register: actual

- name: set expected value for files in a nested directory
  set_fact:
    expected:
      changed: False
      examined: 8
      failed: False
      files:
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: test.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\sub-nest\\test.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: file.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\file.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: test.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\test.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      matched: 3

- name: assert actual == expected
  assert:
    that: actual == expected

- name: find files with recurse set and follow links
  win_find:
    paths: "{{win_find_dir}}\\nested"
    recurse: True
    follow: True
    patterns: "*.ps1"
  register: actual

- name: set expected value for files in a nested directory while following links
  set_fact:
    expected:
      changed: False
      examined: 10
      failed: False
      files:
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: link.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\link\\link.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: test.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\sub-nest\\test.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: file.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\file.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      - { isarchive: True,
          attributes: Archive,
          checksum: 8df33cee3325596517df5bb5aa980cf9c5c1fda3,
          creationtime: 1477984205,
          extension: .ps1,
          filename: test.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\nested\\test.ps1",
          isreadonly: False,
          isshared: False,
          size: 14 }
      matched: 4

- name: assert actual == expected
  assert:
    that: actual == expected

- name: find directories
  win_find:
    paths: "{{win_find_dir}}\\link-dest"
    file_type: directory
  register: actual

- name: set expected fact for directories with recurse and follow
  set_fact:
    expected:
      changed: False
      examined: 2
      failed: False
      files:
      - { isarchive: False,
          attributes: Directory,
          creationtime: 1477984205,
          filename: sub-link,
          ishidden: False,
          isdir: True,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\link-dest\\sub-link",
          isreadonly: False,
          isshared: False,
          size: 0 }
      matched: 1

- name: assert actual == expected
  assert:
    that: actual == expected

- name: find directories recurse and follow with a broken link
  win_find:
    paths: "{{win_find_dir}}"
    file_type: directory
    recurse: True
    follow: True
  register: actual

- name: check directory count with recurse and follow is correct
  assert:
    that:
    - actual.examined == 37
    - actual.matched == 17
    - actual.files[0].filename == 'broken-link'
    - actual.files[0].islnk == True
    - actual.files[6].filename == 'junction-link'
    - actual.files[6].islnk == True
    - actual.files[6].lnk_source == win_find_dir + '\\junction-link-dest'
    - actual.files[11].filename == 'link'
    - actual.files[11].islnk == True
    - actual.files[11].lnk_source == win_find_dir + '\\link-dest'
    - actual.files[15].filename == 'folder'
    - actual.files[15].islnk == False
    - actual.files[15].isshared == True
    - actual.files[15].sharename == 'folder-share'

- name: filter files by size without byte specified
  win_find:
    paths: "{{win_find_dir}}\\single"
    size: 260002
  register: actual_without_byte

- name: filter files by size with byte specified
  win_find:
    paths: "{{win_find_dir}}\\single"
    size: 253k
  register: actual_with_byte

- name: set expected fact for files by size
  set_fact:
    expected:
      changed: False
      examined: 5
      failed: False
      files:
      - { isarchive: True,
          attributes: Archive,
          checksum: f8d100cdcf0e6c1007db2f8dd0b7ee2884df89af,
          creationtime: 1477984205,
          extension: ".ps1",
          filename: large.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\large.ps1",
          isreadonly: False,
          isshared: False,
          size: 260002 }
      matched: 1

- name: assert actual == expected
  assert:
    that: 
    - actual_without_byte == expected
    - actual_with_byte == expected

- name: filter files by size (less than) without byte specified
  win_find:
    paths: "{{win_find_dir}}\\single"
    size: -4
  register: actual_without_byte

- name: filter files by size (less than) with byte specified
  win_find:
    paths: "{{win_find_dir}}\\single"
    size: -4b
  register: actual_with_byte

- name: set expected fact for files by size (less than)
  set_fact:
    expected:
      changed: False
      examined: 5
      failed: False
      files:
      - { isarchive: True,
          attributes: Archive,
          checksum: 86f7e437faa5a7fce15d1ddcb9eaeaea377667b8,
          creationtime: 1477984205,
          extension: ".ps1",
          filename: small.ps1,
          ishidden: False,
          isdir: False,
          islnk: False,
          lastaccesstime: 1477984205,
          lastwritetime: 1477984205,
          owner: BUILTIN\Administrators,
          path: "{{win_find_dir}}\\single\\small.ps1",
          isreadonly: False,
          isshared: False,
          size: 1 }
      matched: 1

- name: assert actual == expected
  assert:
    that: 
    - actual_without_byte == expected
    - actual_with_byte == expected

# For dates we cannot assert against expected as the times change, this is a poor mans attempt at testing
- name: filter files by age without unit specified
  win_find:
    paths: "{{win_find_dir}}\\date"
    age: 3600
  register: actual_without_unit

- name: filter files by age with unit specified
  win_find:
    paths: "{{win_find_dir}}\\date"
    age: 1h
  register: actual_with_unit

- name: assert dates match each other
  assert:
    that:
    - actual_without_unit == actual_with_unit
    - actual_without_unit.matched == 1
    - actual_without_unit.files[0].checksum == 'd1185139c47f5bc951e2e9135922fe31059206b1'
    - actual_without_unit.files[0].path == win_find_dir + '\\date\\old.ps1'

- name: filter files by age (newer than) without unit specified
  win_find:
    paths: "{{win_find_dir}}\\date"
    age: -3600
  register: actual_without_unit

- name: filter files by age (newer than) without unit specified
  win_find:
    paths: "{{win_find_dir}}\\date"
    age: -1h
  register: actual_with_unit

- name: assert dates match each other
  assert:
    that:
    - actual_without_unit == actual_with_unit
    - actual_without_unit.matched == 1
    - actual_without_unit.files[0].checksum == 'af99d0e98df4531b9f26c942f41d65c58766bfa9'
    - actual_without_unit.files[0].path == win_find_dir + '\\date\\new.ps1'

- name: get list of files with md5 checksum
  win_find:
    paths: "{{win_find_dir}}\\single"
    patterns: test.ps1
    checksum_algorithm: md5
  register: actual_md5_checksum

- name: assert md5 checksum value
  assert:
    that:
    - actual_md5_checksum.files[0].checksum == 'd1713d0f1d2e8fae230328d8fd59de01'
  
- name: get list of files with sha1 checksum
  win_find:
    paths: "{{win_find_dir}}\\single"
    patterns: test.ps1
    checksum_algorithm: sha1
  register: actual_sha1_checksum

- name: assert sha1 checksum value
  assert:
    that:
    - actual_sha1_checksum.files[0].checksum == '8df33cee3325596517df5bb5aa980cf9c5c1fda3'

- name: get list of files with sha256 checksum
  win_find:
    paths: "{{win_find_dir}}\\single"
    patterns: test.ps1
    checksum_algorithm: sha256
  register: actual_sha256_checksum

- name: assert sha256 checksum value
  assert:
    that:
    - actual_sha256_checksum.files[0].checksum == 'c20d2eba7ffda0079812721b6f4e4e109e2f0c5e8cc3d1273a060df6f7d9f339'

- name: get list of files with sha384 checksum
  win_find:
    paths: "{{win_find_dir}}\\single"
    patterns: test.ps1
    checksum_algorithm: sha384
  register: actual_sha384_checksum

- name: assert sha384 checksum value
  assert:
    that:
    - actual_sha384_checksum.files[0].checksum == 'aed515eb216b9c7009ae8c4680f46c1e22004528b231aa0482a8587543bca47d3504e9f77e884eb2d11b2f9f5dc01651'

- name: get list of files with sha512 checksum
  win_find:
    paths: "{{win_find_dir}}\\single"
    patterns: test.ps1
    checksum_algorithm: sha512
  register: actual_sha512_checksum

- name: assert sha512 checksum value
  assert:
    that:
    - actual_sha512_checksum.files[0].checksum == '05abf64a68c4731699c23b4fc6894a36646fce525f3c96f9cf743b5d0c3bfd933dad0e95e449e3afe1f74d534d69a53b8f46cf835763dd42915813c897b02b87'

- name: get list of files without checksum
  win_find:
    paths: "{{win_find_dir}}\\single"
    patterns: test.ps1
    get_checksum: False
  register: actual_no_checksum

- name: assert no checksum is returned
  assert:
    that:
    - actual_no_checksum.files[0].checksum is undefined

# https://github.com/ansible/ansible/issues/26158
- name: get list of files in an empty nested directory
  win_find:
    paths: '{{win_find_dir}}\emptynested'
  register: actual_empty_nested

- name: assert get list of files in an empty nested directory
  assert:
    that:
    - actual_empty_nested.matched == 0

- name: create new folders for security tests
  win_file:
    path: '{{win_find_dir}}\{{item}}'
    state: directory
  with_items:
  - secure-tests\secure\internal-folder
  - secure-tests\open\internal-folder

- name: create random password for test user
  set_fact:
    test_win_find_password: password123! + {{ lookup('password', '/dev/null chars=ascii_letters,digits length=8') }}

- name: create test user who does not have access to secure folder
  win_user:
    name: '{{test_win_find_username}}'
    password: '{{test_win_find_password}}'
    state: present
    groups:
    - Users

- name: change owner of secure folder
  win_owner:
    path: '{{win_find_dir}}\secure-tests\secure'
    user: BUILTIN\Administrators
    recurse: yes

- name: set explicit inheritance of secure folder for the Administrators accounts
  win_acl:
    user: BUILTIN\Administrators
    path: '{{win_find_dir}}\secure-tests\secure'
    rights: FullControl
    type: allow
    state: present
    inherit: None

- name: remove inheritance on the secure folder
  win_acl_inheritance:
    path: '{{win_find_dir}}\secure-tests\secure'
    reorganize: no
    state: absent

- name: run win_find with under-privileged account
  win_find:
    paths: '{{win_find_dir}}\secure-tests'
    recurse: yes
    file_type: directory
  register: secure_result
  become: yes
  become_method: runas
  become_user: '{{test_win_find_username}}'
  vars:
    ansible_become_password: '{{test_win_find_password}}'

- name: assert win_find only examined 2 files with under-privileged account
  assert:
    that:
    - secure_result.examined == 2
    - secure_result.matched == 2
    - secure_result.files[0].path == win_find_dir + "\secure-tests\open"
    - secure_result.files[1].path == win_find_dir + "\secure-tests\open\internal-folder"
