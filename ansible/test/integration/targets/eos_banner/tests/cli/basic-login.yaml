---
- name: Remove previous login banner
  eos_config:
    lines: no banner login
    authorize: yes
    provider: "{{ cli }}"

- name: Create login banner
  eos_banner:
    banner: login
    text: |
      Junk login banner
      over multiple lines
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - "result.changed == true"
      - "'banner login' in result.commands[0]" # does this break due to "contains?"
      # Ensure sessions contains epoc. Will fail after 18th May 2033
      - "'ansible_1' in result.session_name"

- name: Create login banner again (idempotent)
  eos_banner:
    banner: login
    text: |
      Junk login banner
      over multiple lines
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - "result.changed == false"
      - "result.commands | length == 0"
      # Ensure sessions contains epoc. Will fail after 18th May 2033
      - "result.session_name is not defined"
  
- name: remove login
  eos_banner:
    banner: login
    state: absent
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - "result.changed == true"
      - "'no banner login' in result.commands" # does this break due to "contains?"
      # Ensure sessions contains epoc. Will fail after 18th May 2033
      - "'ansible_1' in result.session_name"

- name: remove login (idempotent)
  eos_banner:
    banner: login
    state: absent
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - "result.changed == false"
      - "result.commands | length == 0"
      # Ensure sessions contains epoc. Will fail after 18th May 2033
      - "result.session_name is not defined"


# FIXME add in tests for everything defined in docs
# FIXME Test state:absent + test:
# FIXME Without powers ensure "privileged mode required"
